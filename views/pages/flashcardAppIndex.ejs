<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1"/>
		<title> Profile </title>
		<link type="text/css" rel="stylesheet" href="/stylesheets/flashcardApp.css">
		<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/all.css" integrity="sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt" crossorigin="anonymous">
		<script src="events-newSet.js" async> </script>
		<script src="newSet-menu.js" async> </script>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				//hasClass() function checking whether a certain block of text exists within an element's class name 
				function hasClass(element, cls) {
					return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > - 1;
				}

				//'query' object encapsulating the DOM elements being selected
				var query = {
					dataMessage: document.querySelector('.dataMessage-div'),
					dataMessage1: document.querySelector('.dataMessage-1'),
					dataMessage2: document.querySelector('.dataMessage-2')
				};

				//'setData' object encapsulating data pulled from the server/database
				var setData = {
					data: <%- JSON.stringify(data) %>,
					name_forEach: function() {
						/* The purpose of this function is to get the '.setName' of the
						 * user's sets. To iterate through the names of each set, 
						 * we must use setData.data_forEach()[1,2,3,etc.] at the end 
						 * in brackets ([])
						 */
						let tempArray = [];
						JSON.parse(this.data).forEach(function(e) {
							tempArray.push(e.setName);
						});
						return tempArray;
					},
					data_values: function() {
						return Object.values(JSON.parse(this.data));
					},
					dataLength: <%- length %>
				};

				console.log(setData.data);
				console.log(setData.name_forEach()[0]);	
				console.log(setData.name_forEach()[1]);	
				console.log(setData.dataLength);

				//If a user doesn't have any sets, the dataMessage2 element will be shown
				if(setData.dataLength !== 0) {
					//adding/removing classes for dataMessage1/dataMessage2
					query.dataMessage1.classList.add('dataMessage-show');
					query.dataMessage2.classList.remove('dataMessage-show');

					//Loop appending the user's sets within an h3 tag to be viewed in the browser
					for(let i = 0; i < setData.dataLength; i++) {
						let setH3 = document.createElement('h3');
						setH3.setAttribute('class', 'setH3');
						setH3.innerHTML = setData.name_forEach()[i];
						document.querySelector('.dataMessage-1').append(setH3);
					}
				}
				//dataMessage1 element will be displayed otherwise, which displays to the user all of their current sets
				else {
					query.dataMessage1.classList.remove('dataMessage-show');
					query.dataMessage2.classList.add('dataMessage-show');
				}

				/* Script that will help create route parameters containing
				 * URL encoded information which will be used on the next
				 * page load when a user clicks on one of their sets
				 *
				 */ 
				var setDirect = {
					dataMsgDiv: document.querySelector('.dataMessage-1'),
					setH3_list: document.querySelectorAll('.setH3')
				};

				console.log(setDirect.setH3_list);
				console.log(setData.name_forEach());
				
				setDirect.setH3_list.forEach(function(e) {
					var regExpConv = function(str) {
						return str.trim().replace(/\s+|[,\/]/g, '-');
					}

					console.log(regExpConv(e.innerText));
					/* Testing for the regExp string above 
					 *	
					 *  for(let i = 0; i < setData.name_forEach().length; i++) {
					 *		console.log(regExpConv(setData.name_forEach()[i]));
					 *	}
					 */

					e.addEventListener('click', function() {
						location.assign('/' + regExpConv(e.innerText));
					});				
				});			
			});
		</script>
	</head>
	<body>
		<div class="dropbtn-menu">
			<ul class="dbtn-menu-list">
				<a href="/profile"> <li> Your Sets </li> </a>
				<a href=""> <li> Settings </li> </a>
				<a href="/logout"> <li> Logout </li> </a>
			</ul>
		</div>
		<div class="container-1">
			<header class="headerActivityPage-home">
				<div class="header">
					<div class="nameOfSite">
						<a class="nameOfSite-a" href="/profile"> 
							<h1 class="nameOfSite-h1"> FlashPass </h1>
						</a>
					</div>
					<div class="newSets-navBar">
						<div class="createNewSet">
							<a class="createNewSet-a" href="/flashCreate"> 
								<button class="dropbtn"> 
									<i class="far fa-plus-square"></i>
								</button>
							</a>
						</div>
						<div class="sideNavBar">
							<div class="sideNavBar-a">
								<button class="dropbtn" id="newSet-menu"> <i class="fas fa-bars"></i> </button>
							</div>
						</div>
					</div>
				</div>
			</header>
			<div class="searchSets-outer">
				<div class="searchSetsDiv">
					<h2 class="searchSetsDiv-h2"> Current sets </h2>
					<div class="searchBar-inDiv">
						<input class="searchBar-Input" type="text" placeholder="Search all your sets by title"/>
					</div>
				</div>
			</div>			
		</div>
		<div class="container-2">
			<div class="dataMessage-div">
				<div class="dataMessage-1"> </div>
				<div class="dataMessage-2">
					<div class="home-newMsg">
						<h3 class="newMsg-h3">
							Once you begin creating more sets, they will all be displayed on this page for you to see. <br><br> Currently, your list of sets is empty!
						</h3>
					</div>
					<div class="home-newSet-direct">
						<h3 class="newMsg-h3">
							Click the button below to get started:
						</h3>
						<a href="/flashCreate" class="newSet-button-direct"> 
							<h3> Create a New Set </h3> 
						</a>
					</div>
				</div>
			</div>
		</div>			
	</body>
</html>

<!--
<div class="flashcardSet-1" id="flashcardSet-1">
	<h2 class="flashcardSetName" id="flashcardSetName">
	</h2>
	<h3 class="flashcardSetNumTerm">
	</h3>
	<div class="userID">
		<img class="userIDImage" src=""/>
	</div>
</div>	

<script >
			document.addEventListener("DOMContentLoaded", function() {
				function addTextWithinDiv() {
					var flashcardSetName = document.getElementById("flashcardSetName");
					flashcardSetName.textContent = 'First Set';
					document.getElementById("flashcardSet-1").appendChild(flashcardSetName);
				}

				document.getElementById("flashcardSet-1").addEventListener("click", addTextWithinDiv, false);
			})
		</script>

-->

